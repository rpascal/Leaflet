
<script>

    /**********************************************************
        Extending the leaflet library - Start
    **********************************************************/

    L.Layer.include({
        omsAddToMap: function () {
            this.addTo(getMap());
        }
    });

    L.LayerGroup.include({
        omsGetLayer: function (id, property) {
            property = property || "id";
            for (var i in this._layers) {
                if (this._layers[i][property] == id) {
                    return this._layers[i];
                }
            }
        },
        omsRemoveLayer: function (id, property) {
            property = property || "id";
            const layer = this.omsGetLayer(id, property);
            if (layer)
                layer.remove();
        },
        omsAddLayerToMap: function (id, property) {
            property = property || "id";
            const layer = this.omsGetLayer(id, property);
            if (layer)
                layer.omsAddToMap();
        },
        omsRemoveAllInnerLayers: function () {
            this.eachLayer(function (layer) {
                layer.remove();
            });
        },
        omsAddAllLayers: function () {
            this.eachLayer(function (layer) {
                layer.omsAddToMap();
            });
        }
    });

      /*********************************************************
        Extending the leaflet library - End
    **********************************************************/


    var OpcosModel = (function () {
        var opcoLayer;

        var init = function () {
            $.ajax(
                {
                    url: "/Data/OperatingCompanyJson/operatingCompanies.json",
                    type: "GET",
                    dataType: "json"
                }).done(function (companyPolygons) {
                    opcoLayer = createGeoJsonLayer(
                        {
                            data: companyPolygons,
                            newStyles: function (feature) { return { color: feature.properties.fill } },
                            onEachFeature: function (feature, layer) {
                                //Make sure to add the id field to the layer*************************************
                                layer.id = feature.properties.NAME;
                                layer.bindPopup(feature.properties.NAME);
                            }
                        }
                    );
                    show();
                }).fail(function (err) {
                    console.log('OpCoErr: ', err);
                })
        }


        var show = function (identifier) {
            //Using custom functions added to leaflet*************************************
            if (identifier)
                opcoLayer.omsAddLayerToMap(identifier);
            else
                opcoLayer.omsAddAllLayers();
        }

        var hide = function (identifier) {
            //Using custom functions added to leaflet*************************************
            if (identifier)
                opcoLayer.omsRemoveLayer(identifier);
            else
                opcoLayer.omsRemoveAllInnerLayers();
        }
        return {
            init: init,
            show: show,
            hide:hide
        };
    })();

</script>